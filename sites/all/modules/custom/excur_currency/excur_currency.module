<?php
/**
 * @file
 */

define('EXCUR_CURRENCY_DEFAULT', 'none');
define('EXCUR_CURRENCY_EURO', 'EUR');
define('EXCUR_CURRENCY_US_DOLLAR', 'USD');
define('EXCUR_CURRENCY_RUS_ROUBLE', 'RUB');
define('EXCUR_CURRENCY_CAN_DOLLAR', 'CAD');
define('EXCUR_CURRENCY_CZECH_KORUNA', 'CZK');
define('EXCUR_CURRENCY_JAPAN_YEN', 'JPY');
define('EXCUR_CURRENCY_NZ_DOLLAR', 'NZD');
define('EXCUR_CURRENCY_GB_POUND', 'GBP');
define('EXCUR_CURRENCY_SWISS_FRANC', 'CHF');

/**
 * Implements hook_ctools_plugin_directory().
 */
function excur_currency_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'panels') {
    return "plugins/$plugin_type";
  }

  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return "plugins/content_types";
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function excur_currency_form_excur_settings_form_alter(&$form, &$form_state) {
  $currencies = array(
    EXCUR_CURRENCY_EURO => t('Euro'),
    EXCUR_CURRENCY_US_DOLLAR => t('U.S. Dollar'),
    EXCUR_CURRENCY_RUS_ROUBLE => t('Russian Rouble'),
    EXCUR_CURRENCY_CAN_DOLLAR => t('Canadian Dollar'),
    EXCUR_CURRENCY_CZECH_KORUNA => t('Czech Koruna'),
    EXCUR_CURRENCY_JAPAN_YEN => t('Japanese Yen'),
    EXCUR_CURRENCY_NZ_DOLLAR => t('New Zealand Dollar'),
    EXCUR_CURRENCY_GB_POUND => t('Pound sterling'),
    EXCUR_CURRENCY_SWISS_FRANC => t('Swiss Franc'),
  );

  $form['currencies'] = array(
    '#type' => 'fieldset',
    '#title' => t('Currencies'),
    '#collapsible' => TRUE,
  );

  foreach ($currencies as $currency => $title) {
    $form['currencies']["excur_currency_icon_$currency"] = array(
      '#type' => 'textfield',
      '#title' => t('Label of :currency currency', array(':currency' => $title)),
      '#default_value' => variable_get("excur_currency_icon_$currency", $currency),
    );
  }
}

/**
 * Form builder.
 */
function excur_currency_choice_form() {
  $form['currency'] = array(
    '#type' => 'select',
    '#options' => array(
      'none' => t('Currency offers'),
      EXCUR_CURRENCY_EURO => t('Euro'),
      EXCUR_CURRENCY_US_DOLLAR => t('U.S. Dollar'),
      EXCUR_CURRENCY_RUS_ROUBLE => t('Russian Rouble'),
      EXCUR_CURRENCY_CAN_DOLLAR => t('Canadian Dollar'),
      EXCUR_CURRENCY_CZECH_KORUNA => t('Czech Koruna'),
      EXCUR_CURRENCY_JAPAN_YEN => t('Japanese Yen'),
      EXCUR_CURRENCY_NZ_DOLLAR => t('New Zealand Dollar'),
      EXCUR_CURRENCY_GB_POUND => t('Pound sterling'),
      EXCUR_CURRENCY_SWISS_FRANC => t('Swiss Franc'),
    ),
    '#default_value' => !empty($_COOKIE['excur_currency']) ? $_COOKIE['excur_currency'] : 'none',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Change currency'),
  );

  return $form;
}

/**
 * Submit callback for excur_currency_choice_form() form.
 */
function excur_currency_choice_form_submit(&$form, &$form_state) {
  setcookie('excur_currency', $form_state['values']['currency'], REQUEST_TIME + 86400, '/');
}

/**
 * Convert money from one currency to another.
 *
 * @param int $money.
 * @param string $from.
 * @param string $to.
 * @return float.
 */
function excur_currency_convert($money, $from, $to) {
  if (0) {
    // @todo: Do not make request every time.
    // @todo: Store exchange rate in database.
  }
  else {
    $obj = new excurCurrency();
    $value = $obj->converter($money, $from, $to);
  }

  return $value;
}

/**
 * Get lowest price of service.
 *
 * @param object $service.
 * @return float.
 */
function excur_currency_lowest_price($service) {
  $service_wrapper = entity_metadata_wrapper('node', $service);

  foreach ($service_wrapper->field_offer->value() as $offer) {
    foreach ($offer->field_offer_ticket[LANGUAGE_NONE] as $ticket) {
      $ticket = field_collection_item_load($ticket['value']);
      if (!isset($min_price)) {
        $min_price = $ticket->field_offer_ticket_price[LANGUAGE_NONE][0]['value'];
      }

      $min_price = $min_price > $ticket->field_offer_ticket_price[LANGUAGE_NONE][0]['value']
        ? $ticket->field_offer_ticket_price[LANGUAGE_NONE][0]['value']
        : $min_price;
    }
  }

  return isset($min_price) ? $min_price : 0;
}

/**
 * Get currency icon by currency.
 *
 * @param string $currency.
 * @return string.
 */
function excur_currency_get_icon($currency) {
  return variable_get("excur_currency_icon_$currency", $currency);
}
