<?php
/**
 * @file
 */

define('FRONT_THEME_PATH', drupal_get_path('theme', 'exc_theme'));

/**
 * Implements hook
 */
function excur_menu() {
  $items['admin/config/excur'] = array(
    'title' => 'Настройки сайта',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('excur_settings_form'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function excur_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'panels') {
    return "plugins/$plugin_type";
  }

  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return "plugins/content_types";
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function excur_form_main_page_slider_node_form_alter(&$form, &$form_id) {
  if (empty($form['#node']->nid)) {
    $form['title']['#default_value'] = 'Слайдер главной страницы (' . date('d:m:Y') . ')';
  }
}

/**
 * Settings form for excur site.
 */
function excur_settings_form() {

}

/**
 * Validate function for 'excur_settings_form' form.
 */
function excur_settings_form_validate(&$form, &$form_state) {

}

/**
 * Validate function for 'excur_settings_form' form.
 */
function excur_settings_form_submit(&$form, &$form_state) {

}

/**
 * Get images of main page slider.
 *
 * @return array.
 */
function excur_main_slider_images() {
  $nid = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', 'main_page_slider')
    ->orderBy('nid', 'DESC')
    ->range(0, 1)
    ->execute()
    ->fetchField();

  if ($nid) {
    $node = node_load($nid);
    return $node->field_slider_images[LANGUAGE_NONE];
  }

  return array();
}

/**
 * Get text blocks for main page.
 *
 * @return array.
 */
function excur_main_text_blocks() {
  global $language;

  $query = db_select('node', 'n');
  $query->fields('n', array('nid'));
  $query->join('entity_translation', 'et', 'et.entity_id = n.nid');
  $query->condition('n.type ', 'text_block');
  $query->condition('et.entity_type', 'node');
  $query->condition('et.language', $language->language);
  $nids = $query->execute()->fetchCol();

  if ($nids) {
    foreach ($nids as $nid) {
      $nodes[] = node_load($nid);
    }

    return $nodes;
  }

  return array();
}

/**
 * Get count of service in city.
 *
 * @param int $tid.
 * @return int.
 */
function excur_count_service_by_city($tid) {
  $query = db_select('field_data_field_city', 'fdfc');
  $query->fields('fdfc', array('entity_id'));
  $query->condition('fdfc.field_city_target_id', $tid);
  $query->condition('fdfc.bundle', 'service');
  $count = $query->execute()->rowCount();

  return $count ? $count : 0;
}

/**
 * Build the breadcrumb by current page.
 *
 * @return array.
 */
function excur_get_breadcrumb() {

  return array();
}
